@page "/Findings/Edit/{id:int}"

@attribute [Authorize("Finding_Create")]
@inject IFindingService findingService;
@inject BladderDbContext dbContext;
@inject NavigationManager navigationManager;
@inject IUiNotificationService uiNotificationService


@inherits BladderComponentBase

<div class="card">
    <div class="card-header">
        <h3>@L["Create New Observation"]</h3>
    </div>
    <div class="card-body">
        <EditForm Model="Finding" OnValidSubmit="UpdateFinding">
            <DataAnnotationsValidator />

            <Row>
                <Column>
                    <div class="form-group">
                        <label class="form-label">@L["Bootstrap Icon Class"]</label>
                        <InputText @bind-Value="Finding.IconClass" class="form-control" />
                        <ValidationMessage style="color:red;" For="() => Finding.IconClass" />
                    </div>
                </Column>
                <Column>
                    <div class="form-group">
                        <label class="form-label">@L["Description"]</label>
                        <InputText @bind-Value="Finding.Description" class="form-control" />
                        <ValidationMessage style="color:red;" For="() => Finding.Description" />
                    </div>
                </Column>
                

                
            </Row>
            <Row>
                <Span>
                    @L["Don't Know where to get the icons ? "]
                    <a href="https://icons.getbootstrap.com/#icons" target="_blank">@L["click here"]</a>

                </Span>
            </Row>
            <div class="d-flex flex-row justify-content-md-center">
                <div class="form-group mx-1">
                    <button type="submit" class="btn btn-primary">@L["Edit"]</button>
                </div>
                <div class="form-group mx-1">
                    <a href="/Findings/Index" class="btn btn-secondary">@L["Cancel"]</a>
                </div>
            </div>

        </EditForm>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    public Finding Finding { get; set; } = new() ;

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            Finding = await findingService.GetAsync(Id);
        }
    }

    public async Task UpdateFinding()
    {
        
        await findingService.UpdateAsync(Finding);
        navigationManager.NavigateTo("/Findings/Index", true);
    }

}
